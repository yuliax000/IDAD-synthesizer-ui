////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////// Polyphonic Synthesizer
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
let polySynth = new Tone.PolySynth(Tone.Synth, {
  oscillator: {
    type: "fatsawtooth",
    count: 3,
    spread: 10,
  },
  envelope: {
    attack: 0.01,
    decay: 0.1,
    sustain: 0.5,
    release: 0.1,
    attackCurve: "exponential",
  },
});

////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////// Sampler
////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/* 
let sampler = new Tone.Sampler({
    urls: {
        D2: "mel_low_d.wav",
        C3: "four.m4a",
    },
    baseUrl: "./assets/audioSamples/"
});
*/

////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////// Audio Effects
////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const filter = new Tone.Filter(20000, "lowpass");

const distortion = new Tone.Distortion(0);

const reverb = new Tone.Reverb(2);

const meter = new Tone.Meter();
meter.smoothing = 0.1;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////// Functions
////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////// Init Function
// This gets triggered when the user closes the dialog element
// It will connect the polysynth => filter => distortion => meter => audio output
function toneInit() {
  polySynth.chain(filter, distortion, reverb, meter, Tone.Destination);
  // This is an alternative statement if the sampler is instead chosen : the only difference is the variable name
  // The sampler above must be uncommented for this to work, as well as the declaration on line 3 of keyboardController.js
  // sampler.chain(filter, distortion, meter, Tone.Destination);
}
